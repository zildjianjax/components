{"version":3,"file":"main.041740ebfbec76cf6a01.bundle.js","sources":["webpack:///./src/react-components/UpgradeWithStripeButton.js"],"sourcesContent":["import React from 'react'\r\nimport $ from 'jquery'\r\nimport { Button } from 'bloomer/lib/elements/Button';\r\n\r\nexport default React.createClass({\r\n    handleClickRoot() {\r\n        if(this.props.validatePro) {\r\n            this.handleClickWithValidation()\r\n        } else {\r\n            this.handleClick()\r\n        }\r\n    },\r\n    handleClickWithValidation() {\r\n        if(this.props.isLoggedIn) {\r\n            this.handleClick()\r\n        } else {\r\n            this.props.handleShowLoginModal()\r\n        }\r\n    },\r\n    handleClick() {        \r\n        let self = this\r\n        var handler = StripeCheckout.configure({\r\n            key: this.props.stripeConfig.publishable_key,\r\n            name: \"Easel.ly\",\r\n            description: this.props.stripeConfig.description,\r\n            allowRememberMe: false,\r\n            locale: \"auto\",\r\n            currency: \"usd\",\r\n            token: function (token, args) {\r\n                var $input = $('<input type=hidden name=stripeToken />').val(token.id);\r\n                $('#checkout-form').append($input);\r\n                if(self.props.stripeConfig.quan) {\r\n                    var $quan = $('<input type=hidden name=quantity />').val(self.props.stripeConfig.quan);\r\n                    $('#checkout-form').append($quan);\r\n                }\r\n                if(self.props.isCoupon) {\r\n                    var $quan = $('<input type=hidden name=coupon />').val(1);\r\n                    $('#checkout-form').append($quan);\r\n                }\r\n                var $email = $('<input type=hidden name=stripeEmail />').val(token.email);\r\n                $('#checkout-form').append($email).submit();\r\n            }\r\n        });\r\n\r\n        handler.open({\r\n            amount: this.props.stripeConfig['amount']\r\n        });\r\n    },\r\n    render() {\r\n        var button = \"\"\r\n        if (this.props.isLink) {\r\n            button = (\r\n                <Button \r\n                    isColor=\"success\" \r\n                    href=\"#\" \r\n                    style={this.props.styles}\r\n                    onClick={this.handleClickRoot}\r\n                    dangerouslySetInnerHTML={{ __html: this.props.label }}\r\n                    className={this.props.classes}\r\n                >\r\n                </Button>\r\n            )\r\n        } else {\r\n            button = (\r\n                <Button \r\n                    isColor=\"success\" \r\n                    style={this.props.styles}\r\n                    onClick={this.handleClickRoot}\r\n                    dangerouslySetInnerHTML={{ __html: this.props.label }}\r\n                    className={this.props.classes}\r\n                >\r\n                </Button>\r\n            )\r\n        }\r\n        return button\r\n    }\r\n})"],"mappings":"AAIA","sourceRoot":""}